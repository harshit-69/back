"""Initial migration with User model

Revision ID: 61e6ea6b951e
Revises: 
Create Date: 2025-07-06 06:57:12.962737+00:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '61e6ea6b951e'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('first_name', sa.String(), nullable=True))
    op.add_column('users', sa.Column('last_name', sa.String(), nullable=True))
    op.add_column('users', sa.Column('profile_picture', sa.String(), nullable=True))
    op.add_column('users', sa.Column('status', sa.String(), nullable=True))
    op.add_column('users', sa.Column('is_verified', sa.Boolean(), nullable=True))
    op.add_column('users', sa.Column('driving_license', sa.String(), nullable=True))
    op.add_column('users', sa.Column('vehicle_number', sa.String(), nullable=True))
    op.add_column('users', sa.Column('vehicle_type', sa.String(), nullable=True))
    op.add_column('users', sa.Column('current_latitude', sa.Float(), nullable=True))
    op.add_column('users', sa.Column('current_longitude', sa.Float(), nullable=True))
    op.add_column('users', sa.Column('is_available', sa.Boolean(), nullable=True))
    op.add_column('users', sa.Column('wallet_balance', sa.Float(), nullable=True))
    op.add_column('users', sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True))
    op.add_column('users', sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('users', sa.Column('last_login', sa.DateTime(timezone=True), nullable=True))
    op.alter_column('users', 'role',
               existing_type=postgresql.ENUM('RIDER', 'DRIVER', 'ADMIN', name='userrole'),
               type_=sa.String(),
               nullable=True)
    op.drop_column('users', 'otp')
    op.drop_column('users', 'otp_valid_until')
    op.drop_column('users', 'full_name')
    op.drop_column('users', 'is_superuser')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('is_superuser', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('full_name', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('otp_valid_until', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('otp', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.alter_column('users', 'role',
               existing_type=sa.String(),
               type_=postgresql.ENUM('RIDER', 'DRIVER', 'ADMIN', name='userrole'),
               nullable=False)
    op.drop_column('users', 'last_login')
    op.drop_column('users', 'updated_at')
    op.drop_column('users', 'created_at')
    op.drop_column('users', 'wallet_balance')
    op.drop_column('users', 'is_available')
    op.drop_column('users', 'current_longitude')
    op.drop_column('users', 'current_latitude')
    op.drop_column('users', 'vehicle_type')
    op.drop_column('users', 'vehicle_number')
    op.drop_column('users', 'driving_license')
    op.drop_column('users', 'is_verified')
    op.drop_column('users', 'status')
    op.drop_column('users', 'profile_picture')
    op.drop_column('users', 'last_name')
    op.drop_column('users', 'first_name')
    # ### end Alembic commands ###
